

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sat May 26 18:57:16 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F88
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 14 "Main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 14 "Main.c"
    45  2007  FF0A               	dw 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFBF & 0xFFDF & 0xFFFF & 0xFFFB & 0xF
                                 FEE ;#
    46                           # 15 "Main.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 15 "Main.c"
    49  2008  FFFC               	dw 0xFFFD & 0xFFFE ;#
    50                           	FNCALL	_main,_Init_Hardware
    51                           	FNROOT	_main
    52                           	FNCALL	intlevel1,_isr
    53                           	global	intlevel1
    54                           	FNROOT	intlevel1
    55                           	global	_next_sample
    56                           psect	idataCOMMON,class=CODE,space=0,delta=2
    57                           global __pidataCOMMON
    58  00E4                     __pidataCOMMON:
    59                           	file	"Main.c"
    60                           	line	25
    61                           
    62                           ;initializer for _next_sample
    63  00E4  3408               	retlw	08h
    64                           	global	_bit_count
    65                           	global	_count
    66                           	global	_last8bits
    67                           	global	_ones_count
    68                           	global	_sample_clock
    69                           	global	_dcd
    70                           	global	_flag
    71                           	global	_last
    72                           	global	_rxtoggled
    73                           	global	_INTCON
    74  000B                     _INTCON	set	11
    75                           	global	_RCSTA
    76  0018                     _RCSTA	set	24
    77                           	global	_T1CON
    78  0010                     _T1CON	set	16
    79                           	global	_T2CON
    80  0012                     _T2CON	set	18
    81                           	global	_TMR0
    82  0001                     _TMR0	set	1
    83                           	global	_TXREG
    84  0019                     _TXREG	set	25
    85                           	global	_CARRY
    86  0018                     _CARRY	set	24
    87                           	global	_GIE
    88  005F                     _GIE	set	95
    89                           	global	_RB0
    90  0030                     _RB0	set	48
    91                           	global	_RB4
    92  0034                     _RB4	set	52
    93                           	global	_RBIF
    94  0058                     _RBIF	set	88
    95                           	global	_TMR2IF
    96  0061                     _TMR2IF	set	97
    97                           	global	_ANSEL
    98  009B                     _ANSEL	set	155
    99                           	global	_CMCON
   100  009C                     _CMCON	set	156
   101                           	global	_OPTION_REG
   102  0081                     _OPTION_REG	set	129
   103                           	global	_PIE1
   104  008C                     _PIE1	set	140
   105                           	global	_PR2
   106  0092                     _PR2	set	146
   107                           	global	_SPBRG
   108  0099                     _SPBRG	set	153
   109                           	global	_TRISA
   110  0085                     _TRISA	set	133
   111                           	global	_TRISB
   112  0086                     _TRISB	set	134
   113                           	global	_TXSTA
   114  0098                     _TXSTA	set	152
   115                           	global	_EEADR
   116  010D                     _EEADR	set	269
   117                           	global	_EEDATA
   118  010C                     _EEDATA	set	268
   119                           	global	_EECON1
   120  018C                     _EECON1	set	396
   121                           	global	_EECON2
   122  018D                     _EECON2	set	397
   123                           	global	_RD
   124  0C60                     _RD	set	3168
   125                           	global	_WR
   126  0C61                     _WR	set	3169
   127                           	global	_WREN
   128  0C62                     _WREN	set	3170
   129                           	file	"C:\Users\Alex\AppData\Local\Temp\s4l8."
   130                           	line	#
   131                           psect cinit,class=CODE,delta=2
   132                           global start_initialization
   133  00D0                     start_initialization:
   134                           
   135                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   136                           global __pbitbssCOMMON
   137  03D0                     __pbitbssCOMMON:
   138  03D0                     _dcd:
   139  03D0                            ds      1
   140                           
   141  03D1                     _flag:
   142  03D1                            ds      1
   143                           
   144  03D2                     _last:
   145  03D2                            ds      1
   146                           
   147  03D3                     _rxtoggled:
   148  03D3                            ds      1
   149                           
   150                           psect	bssCOMMON,class=COMMON,space=1
   151                           global __pbssCOMMON
   152  0070                     __pbssCOMMON:
   153  0070                     _bit_count:
   154  0070                            ds      1
   155                           
   156  0071                     _count:
   157  0071                            ds      1
   158                           
   159  0072                     _last8bits:
   160  0072                            ds      1
   161                           
   162  0073                     _ones_count:
   163  0073                            ds      1
   164                           
   165  0074                     _sample_clock:
   166  0074                            ds      1
   167                           
   168                           psect	dataCOMMON,class=COMMON,space=1
   169                           global __pdataCOMMON
   170  007B                     __pdataCOMMON:
   171                           	file	"Main.c"
   172  007B                     _next_sample:
   173  007B                            ds      1
   174                           
   175                           ; Clear objects allocated to BITCOMMON
   176                           psect cinit,class=CODE,delta=2
   177  00D0  01FA               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   178                           ; Clear objects allocated to COMMON
   179                           psect cinit,class=CODE,delta=2
   180  00D1  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   181  00D2  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   182  00D3  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   183  00D4  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   184  00D5  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   185                           ; Initialize objects allocated to COMMON
   186                           	global __pidataCOMMON
   187                           psect cinit,class=CODE,delta=2
   188  00D6  118A  20E4  118A   	fcall	__pidataCOMMON+0		;fetch initializer
   189  00D9  00FB               	movwf	__pdataCOMMON+0&07fh		
   190                           psect cinit,class=CODE,delta=2
   191                           global end_of_initialization
   192                           
   193                           ;End of C runtime variable initialization code
   194                           
   195  00DA                     end_of_initialization:
   196  00DA  0183               clrf status
   197  00DB  118A  28DD         ljmp _main	;jump to C main() function
   198                           psect	cstackCOMMON,class=COMMON,space=1
   199                           global __pcstackCOMMON
   200  0075                     __pcstackCOMMON:
   201                           	global	?_Init_Hardware
   202  0075                     ?_Init_Hardware:	; 0 bytes @ 0x0
   203                           	global	?_isr
   204  0075                     ?_isr:	; 0 bytes @ 0x0
   205                           	global	??_isr
   206  0075                     ??_isr:	; 0 bytes @ 0x0
   207                           	global	?_main
   208  0075                     ?_main:	; 2 bytes @ 0x0
   209  0075                     	ds	5
   210                           	global	??_Init_Hardware
   211  007A                     ??_Init_Hardware:	; 0 bytes @ 0x5
   212                           	global	??_main
   213  007A                     ??_main:	; 0 bytes @ 0x5
   214 ;;Data sizes: Strings 0, constant 0, data 1, bss 5, persistent 0 stack 0
   215 ;;Auto spaces:   Size  Autos    Used
   216 ;; COMMON          14      5      12
   217 ;; BANK0           80      0       0
   218 ;; BANK1           80      0       0
   219 ;; BANK3           96      0       0
   220 ;; BANK2           96      0       0
   221                           
   222 ;;
   223 ;; Pointer list with targets:
   224                           
   225                           
   226                           
   227 ;;
   228 ;; Critical Paths under _main in COMMON
   229 ;;
   230 ;;   None.
   231 ;;
   232 ;; Critical Paths under _isr in COMMON
   233 ;;
   234 ;;   None.
   235 ;;
   236 ;; Critical Paths under _main in BANK0
   237 ;;
   238 ;;   None.
   239 ;;
   240 ;; Critical Paths under _isr in BANK0
   241 ;;
   242 ;;   None.
   243 ;;
   244 ;; Critical Paths under _main in BANK1
   245 ;;
   246 ;;   None.
   247 ;;
   248 ;; Critical Paths under _isr in BANK1
   249 ;;
   250 ;;   None.
   251 ;;
   252 ;; Critical Paths under _main in BANK3
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _isr in BANK3
   257 ;;
   258 ;;   None.
   259 ;;
   260 ;; Critical Paths under _main in BANK2
   261 ;;
   262 ;;   None.
   263 ;;
   264 ;; Critical Paths under _isr in BANK2
   265 ;;
   266 ;;   None.
   267                           
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271                           
   272 ;;
   273 ;;Call Graph Tables:
   274 ;;
   275 ;; ---------------------------------------------------------------------------------
   276 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (0) _main                                                 0     0      0       0
   279 ;;                      _Init_Hardware
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (1) _Init_Hardware                                        0     0      0       0
   282 ;; ---------------------------------------------------------------------------------
   283 ;; Estimated maximum stack depth 1
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (2) _isr                                                  5     5      0       0
   288 ;;                                              0 COMMON     5     5      0
   289 ;; ---------------------------------------------------------------------------------
   290 ;; Estimated maximum stack depth 2
   291 ;; ---------------------------------------------------------------------------------
   292                           
   293 ;; Call Graph Graphs:
   294                           
   295 ;; _main (ROOT)
   296 ;;   _Init_Hardware
   297 ;;
   298 ;; _isr (ROOT)
   299 ;;
   300                           
   301 ;; Address spaces:
   302                           
   303 ;;Name               Size   Autos  Total    Cost      Usage
   304 ;;BANK3               60      0       0       9        0.0%
   305 ;;BITBANK3            60      0       0       8        0.0%
   306 ;;SFR3                 0      0       0       4        0.0%
   307 ;;BITSFR3              0      0       0       4        0.0%
   308 ;;BANK2               60      0       0      11        0.0%
   309 ;;BITBANK2            60      0       0      10        0.0%
   310 ;;SFR2                 0      0       0       5        0.0%
   311 ;;BITSFR2              0      0       0       5        0.0%
   312 ;;SFR1                 0      0       0       2        0.0%
   313 ;;BITSFR1              0      0       0       2        0.0%
   314 ;;BANK1               50      0       0       7        0.0%
   315 ;;BITBANK1            50      0       0       6        0.0%
   316 ;;CODE                 0      0       0       0        0.0%
   317 ;;DATA                 0      0       D      12        0.0%
   318 ;;ABS                  0      0       C       3        0.0%
   319 ;;NULL                 0      0       0       0        0.0%
   320 ;;STACK                0      0       1       2        0.0%
   321 ;;BANK0               50      0       0       5        0.0%
   322 ;;BITBANK0            50      0       0       4        0.0%
   323 ;;SFR0                 0      0       0       1        0.0%
   324 ;;BITSFR0              0      0       0       1        0.0%
   325 ;;COMMON               E      5       C       1       85.7%
   326 ;;BITCOMMON            E      0       1       0        7.1%
   327 ;;EEDATA             100      0       0       0        0.0%
   328                           
   329                           	global	_main
   330                           psect	maintext,global,class=CODE,delta=2
   331                           global __pmaintext
   332  00DD                     __pmaintext:
   333                           
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 134 in file "Main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2  643[COMMON] int 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, pclath, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 17F/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0
   352 ;;      Temps:          0       0       0       0       0
   353 ;;      Totals:         0       0       0       0       0
   354 ;;Total ram usage:        0 bytes
   355 ;; Hardware stack levels required when called:    2
   356 ;; This function calls:
   357 ;;		_Init_Hardware
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           psect	maintext
   363                           	file	"Main.c"
   364                           	line	134
   365                           	global	__size_of_main
   366  0007                     	__size_of_main	equ	__end_of_main-_main
   367                           	
   368  00DD                     _main:	
   369                           	opt	stack 6
   370                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   371                           	line	135
   372                           	
   373  00DD                     l2542:	
   374                           ;Main.c: 135: Init_Hardware();
   375  00DD  118A  20AB  118A   	fcall	_Init_Hardware
   376  00E0  28E1               	goto	l645
   377                           	line	136
   378                           ;Main.c: 136: while (1)
   379                           	
   380  00E1                     l644:	
   381                           	line	139
   382                           ;Main.c: 137: {
   383                           	
   384  00E1                     l645:	
   385                           	line	136
   386  00E1  28E1               	goto	l645
   387                           	
   388  00E2                     l646:	
   389                           	line	140
   390                           	
   391  00E2                     l647:	
   392                           	global	start
   393  00E2  118A  2811         	ljmp	start
   394                           	opt stack 0
   395                           GLOBAL	__end_of_main
   396  00E4                     	__end_of_main:
   397 ;; =============== function _main ends ============
   398                           
   399                           	signat	_main,90
   400                           	global	_Init_Hardware
   401                           psect	text77,local,class=CODE,delta=2
   402                           global __ptext77
   403  00AB                     __ptext77:
   404                           
   405 ;; *************** function _Init_Hardware *****************
   406 ;; Defined at:
   407 ;;		line 29 in file "Main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;		None               void
   414 ;; Registers used:
   415 ;;		wreg
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         0       0       0       0       0
   425 ;;Total ram usage:        0 bytes
   426 ;; Hardware stack levels used:    1
   427 ;; Hardware stack levels required when called:    1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           psect	text77
   435                           	file	"Main.c"
   436                           	line	29
   437                           	global	__size_of_Init_Hardware
   438  0025                     	__size_of_Init_Hardware	equ	__end_of_Init_Hardware-_Init_Hardware
   439                           	
   440  00AB                     _Init_Hardware:	
   441                           	opt	stack 6
   442                           ; Regs used in _Init_Hardware: [wreg]
   443                           	line	30
   444                           	
   445  00AB                     l1618:	
   446                           ;Main.c: 30: OPTION_REG = 0b10000011;
   447  00AB  3083               	movlw	(083h)
   448  00AC  1683               	bsf	status, 5	;RP0=1, select bank1
   449  00AD  1303               	bcf	status, 6	;RP1=0, select bank1
   450  00AE  0081               	movwf	(129)^080h	;volatile
   451                           	line	31
   452                           ;Main.c: 31: T1CON = 0b00110000;
   453  00AF  3030               	movlw	(030h)
   454  00B0  1283               	bcf	status, 5	;RP0=0, select bank0
   455  00B1  1303               	bcf	status, 6	;RP1=0, select bank0
   456  00B2  0090               	movwf	(16)	;volatile
   457                           	line	32
   458                           ;Main.c: 32: T2CON = 0b00000101;
   459  00B3  3005               	movlw	(05h)
   460  00B4  0092               	movwf	(18)	;volatile
   461                           	line	33
   462                           ;Main.c: 33: ANSEL = 0b00011111;
   463  00B5  301F               	movlw	(01Fh)
   464  00B6  1683               	bsf	status, 5	;RP0=1, select bank1
   465  00B7  1303               	bcf	status, 6	;RP1=0, select bank1
   466  00B8  009B               	movwf	(155)^080h	;volatile
   467                           	line	34
   468                           ;Main.c: 34: TRISA = 0b11110111;
   469  00B9  30F7               	movlw	(0F7h)
   470  00BA  0085               	movwf	(133)^080h	;volatile
   471                           	line	35
   472                           ;Main.c: 35: TRISB = 0b00110100;
   473  00BB  3034               	movlw	(034h)
   474  00BC  0086               	movwf	(134)^080h	;volatile
   475                           	line	36
   476                           ;Main.c: 36: RCSTA = 0b10100000;
   477  00BD  30A0               	movlw	(0A0h)
   478  00BE  1283               	bcf	status, 5	;RP0=0, select bank0
   479  00BF  1303               	bcf	status, 6	;RP1=0, select bank0
   480  00C0  0098               	movwf	(24)	;volatile
   481                           	line	37
   482                           ;Main.c: 37: TXSTA = 0b00100100;
   483  00C1  3024               	movlw	(024h)
   484  00C2  1683               	bsf	status, 5	;RP0=1, select bank1
   485  00C3  1303               	bcf	status, 6	;RP1=0, select bank1
   486  00C4  0098               	movwf	(152)^080h	;volatile
   487                           	line	38
   488                           ;Main.c: 38: SPBRG = 129;
   489  00C5  3081               	movlw	(081h)
   490  00C6  0099               	movwf	(153)^080h	;volatile
   491                           	line	39
   492                           ;Main.c: 39: CMCON = 0b00000110;
   493  00C7  3006               	movlw	(06h)
   494  00C8  009C               	movwf	(156)^080h	;volatile
   495                           	line	40
   496                           ;Main.c: 40: INTCON = 0b11001000;
   497  00C9  30C8               	movlw	(0C8h)
   498  00CA  008B               	movwf	(11)	;volatile
   499                           	line	41
   500                           ;Main.c: 41: PIE1 = 0b00000010;
   501  00CB  3002               	movlw	(02h)
   502  00CC  008C               	movwf	(140)^080h	;volatile
   503                           	line	42
   504                           ;Main.c: 42: PR2 = 130;
   505  00CD  3082               	movlw	(082h)
   506  00CE  0092               	movwf	(146)^080h	;volatile
   507                           	line	43
   508                           	
   509  00CF                     l621:	
   510  00CF  0008               	return
   511                           	opt stack 0
   512                           GLOBAL	__end_of_Init_Hardware
   513  00D0                     	__end_of_Init_Hardware:
   514 ;; =============== function _Init_Hardware ends ============
   515                           
   516                           	signat	_Init_Hardware,88
   517                           	global	_isr
   518                           psect	text78,local,class=CODE,delta=2
   519                           global __ptext78
   520  0013                     __ptext78:
   521                           
   522 ;; *************** function _isr *****************
   523 ;; Defined at:
   524 ;;		line 45 in file "Main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;		None               void
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          5       0       0       0       0
   541 ;;      Totals:         5       0       0       0       0
   542 ;;Total ram usage:        5 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		Interrupt level 1
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           psect	text78
   551                           	file	"Main.c"
   552                           	line	45
   553                           	global	__size_of_isr
   554  0098                     	__size_of_isr	equ	__end_of_isr-_isr
   555                           	
   556  0013                     _isr:	
   557                           	opt	stack 6
   558                           ; Regs used in _isr: [wreg+status,2+status,0]
   559                           psect	intentry,class=CODE,delta=2
   560                           global __pintentry
   561  0004                     __pintentry:
   562                           global interrupt_function
   563  0004                     interrupt_function:
   564                           	global saved_w
   565  007E                     	saved_w	set	btemp+0
   566  0004  00FE               	movwf	saved_w
   567  0005  0E03               	swapf	status,w
   568  0006  00F6               	movwf	(??_isr+1)
   569  0007  0804               	movf	fsr0,w
   570  0008  00F7               	movwf	(??_isr+2)
   571  0009  080A               	movf	pclath,w
   572  000A  00F8               	movwf	(??_isr+3)
   573  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   574  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   575  000D  087F               	movf	btemp+1,w
   576  000E  00F9               	movwf	(??_isr+4)
   577  000F  118A  2813         	ljmp	_isr
   578                           psect	text78
   579                           	line	46
   580                           	
   581  0013                     i1l1620:	
   582                           ;Main.c: 46: count = TMR0;
   583  0013  0801               	movf	(1),w	;volatile
   584  0014  00F5               	movwf	(??_isr+0)+0
   585  0015  0875               	movf	(??_isr+0)+0,w
   586  0016  00F1               	movwf	(_count)
   587                           	line	47
   588                           	
   589  0017                     i1l1622:	
   590                           ;Main.c: 47: if (RBIF)
   591  0017  1C0B               	btfss	(88/8),(88)&7
   592  0018  281A               	goto	u1_21
   593  0019  281B               	goto	u1_20
   594  001A                     u1_21:
   595  001A  283B               	goto	i1l624
   596  001B                     u1_20:
   597                           	line	50
   598                           	
   599  001B                     i1l1624:	
   600                           ;Main.c: 48: {
   601                           ;Main.c: 50: if (count > 91)
   602  001B  305C               	movlw	(05Ch)
   603  001C  0271               	subwf	(_count),w
   604  001D  1C03               	skipc
   605  001E  2820               	goto	u2_21
   606  001F  2821               	goto	u2_20
   607  0020                     u2_21:
   608  0020  282A               	goto	i1l1632
   609  0021                     u2_20:
   610                           	line	52
   611                           	
   612  0021                     i1l1626:	
   613                           ;Main.c: 51: {
   614                           ;Main.c: 52: TMR0 = 0;
   615  0021  0181               	clrf	(1)	;volatile
   616                           	line	53
   617                           	
   618  0022                     i1l1628:	
   619                           ;Main.c: 53: if (!last)
   620  0022  197A               	btfsc	(_last/8),(_last)&7
   621  0023  2825               	goto	u3_21
   622  0024  2826               	goto	u3_20
   623  0025                     u3_21:
   624  0025  2828               	goto	i1l626
   625  0026                     u3_20:
   626                           	line	55
   627                           	
   628  0026                     i1l1630:	
   629                           ;Main.c: 54: {
   630                           ;Main.c: 55: rxtoggled = 1;
   631  0026  15FA               	bsf	(_rxtoggled/8),(_rxtoggled)&7
   632                           	line	56
   633                           ;Main.c: 56: dcd = 1;
   634  0027  147A               	bsf	(_dcd/8),(_dcd)&7
   635                           	line	57
   636                           	
   637  0028                     i1l626:	
   638                           	line	58
   639                           ;Main.c: 57: }
   640                           ;Main.c: 58: last = 1;
   641  0028  157A               	bsf	(_last/8),(_last)&7
   642                           	line	59
   643                           ;Main.c: 59: }
   644  0029  2839               	goto	i1l627
   645                           	line	60
   646                           	
   647  002A                     i1l625:	
   648                           	
   649  002A                     i1l1632:	
   650                           ;Main.c: 60: else if (count > 48)
   651  002A  3031               	movlw	(031h)
   652  002B  0271               	subwf	(_count),w
   653  002C  1C03               	skipc
   654  002D  282F               	goto	u4_21
   655  002E  2830               	goto	u4_20
   656  002F                     u4_21:
   657  002F  2839               	goto	i1l627
   658  0030                     u4_20:
   659                           	line	62
   660                           	
   661  0030                     i1l1634:	
   662                           ;Main.c: 61: {
   663                           ;Main.c: 62: TMR0 = 0;
   664  0030  0181               	clrf	(1)	;volatile
   665                           	line	63
   666                           	
   667  0031                     i1l1636:	
   668                           ;Main.c: 63: if (last)
   669  0031  1D7A               	btfss	(_last/8),(_last)&7
   670  0032  2834               	goto	u5_21
   671  0033  2835               	goto	u5_20
   672  0034                     u5_21:
   673  0034  2837               	goto	i1l629
   674  0035                     u5_20:
   675                           	line	65
   676                           	
   677  0035                     i1l1638:	
   678                           ;Main.c: 64: {
   679                           ;Main.c: 65: rxtoggled = 1;
   680  0035  15FA               	bsf	(_rxtoggled/8),(_rxtoggled)&7
   681                           	line	66
   682                           ;Main.c: 66: dcd = 1;
   683  0036  147A               	bsf	(_dcd/8),(_dcd)&7
   684                           	line	67
   685                           	
   686  0037                     i1l629:	
   687                           	line	68
   688                           ;Main.c: 67: }
   689                           ;Main.c: 68: last = 0;
   690  0037  117A               	bcf	(_last/8),(_last)&7
   691  0038  2839               	goto	i1l627
   692                           	line	69
   693                           	
   694  0039                     i1l628:	
   695                           	line	70
   696                           	
   697  0039                     i1l627:	
   698                           ;Main.c: 69: }
   699                           ;Main.c: 70: RB4 = 0;
   700  0039  1206               	bcf	(52/8),(52)&7
   701                           	line	71
   702                           ;Main.c: 71: RBIF = 0;
   703  003A  100B               	bcf	(88/8),(88)&7
   704                           	line	72
   705                           	
   706  003B                     i1l624:	
   707                           	line	74
   708                           ;Main.c: 72: }
   709                           ;Main.c: 74: if (TMR2IF)
   710  003B  1C8C               	btfss	(97/8),(97)&7
   711  003C  283E               	goto	u6_21
   712  003D  283F               	goto	u6_20
   713  003E                     u6_21:
   714  003E  28A0               	goto	i1l641
   715  003F                     u6_20:
   716                           	line	76
   717                           	
   718  003F                     i1l1640:	
   719                           ;Main.c: 75: {
   720                           ;Main.c: 76: if (dcd)
   721  003F  1C7A               	btfss	(_dcd/8),(_dcd)&7
   722  0040  2842               	goto	u7_21
   723  0041  2843               	goto	u7_20
   724  0042                     u7_21:
   725  0042  289E               	goto	i1l631
   726  0043                     u7_20:
   727                           	line	79
   728                           	
   729  0043                     i1l1642:	
   730                           ;Main.c: 77: {
   731                           ;Main.c: 79: if (rxtoggled)
   732  0043  1DFA               	btfss	(_rxtoggled/8),(_rxtoggled)&7
   733  0044  2846               	goto	u8_21
   734  0045  2847               	goto	u8_20
   735  0046                     u8_21:
   736  0046  2863               	goto	i1l1656
   737  0047                     u8_20:
   738                           	line	81
   739                           	
   740  0047                     i1l1644:	
   741                           ;Main.c: 80: {
   742                           ;Main.c: 81: if(ones_count != 5)
   743  0047  0873               	movf	(_ones_count),w
   744  0048  3A05               	xorlw	05h
   745  0049  1903               	skipnz
   746  004A  284C               	goto	u9_21
   747  004B  284D               	goto	u9_20
   748  004C                     u9_21:
   749  004C  2854               	goto	i1l1650
   750  004D                     u9_20:
   751                           	line	83
   752                           	
   753  004D                     i1l1646:	
   754                           ;Main.c: 82: {
   755                           ;Main.c: 83: bit_count++;
   756  004D  3001               	movlw	(01h)
   757  004E  00F5               	movwf	(??_isr+0)+0
   758  004F  0875               	movf	(??_isr+0)+0,w
   759  0050  07F0               	addwf	(_bit_count),f
   760                           	line	84
   761                           	
   762  0051                     i1l1648:	
   763                           ;Main.c: 84: last8bits >>= 1;
   764  0051  1003               	clrc
   765  0052  0CF2               	rrf	(_last8bits),f
   766                           
   767  0053  2854               	goto	i1l1650
   768                           	line	85
   769                           	
   770  0054                     i1l633:	
   771                           	line	86
   772                           	
   773  0054                     i1l1650:	
   774                           ;Main.c: 85: }
   775                           ;Main.c: 86: if(ones_count == 6) flag = 1;
   776  0054  0873               	movf	(_ones_count),w
   777  0055  3A06               	xorlw	06h
   778  0056  1D03               	skipz
   779  0057  2859               	goto	u10_21
   780  0058  285A               	goto	u10_20
   781  0059                     u10_21:
   782  0059  285B               	goto	i1l634
   783  005A                     u10_20:
   784                           	
   785  005A                     i1l1652:	
   786  005A  14FA               	bsf	(_flag/8),(_flag)&7
   787                           	
   788  005B                     i1l634:	
   789                           	line	87
   790                           ;Main.c: 87: rxtoggled = 0;
   791  005B  11FA               	bcf	(_rxtoggled/8),(_rxtoggled)&7
   792                           	line	88
   793                           ;Main.c: 88: ones_count = 0;
   794  005C  01F3               	clrf	(_ones_count)
   795                           	line	89
   796                           ;Main.c: 89: sample_clock = 0;
   797  005D  01F4               	clrf	(_sample_clock)
   798                           	line	90
   799                           	
   800  005E                     i1l1654:	
   801                           ;Main.c: 90: next_sample = 12;
   802  005E  300C               	movlw	(0Ch)
   803  005F  00F5               	movwf	(??_isr+0)+0
   804  0060  0875               	movf	(??_isr+0)+0,w
   805  0061  00FB               	movwf	(_next_sample)
   806                           	line	91
   807                           ;Main.c: 91: }
   808  0062  287F               	goto	i1l1668
   809                           	line	92
   810                           	
   811  0063                     i1l632:	
   812                           	line	94
   813                           	
   814  0063                     i1l1656:	
   815                           ;Main.c: 92: else
   816                           ;Main.c: 93: {
   817                           ;Main.c: 94: if (++sample_clock == next_sample)
   818  0063  3001               	movlw	(01h)
   819  0064  00F5               	movwf	(??_isr+0)+0
   820  0065  0875               	movf	(??_isr+0)+0,w
   821  0066  07F4               	addwf	(_sample_clock),f
   822  0067  0874               	movf	((_sample_clock)),w
   823  0068  067B               	xorwf	(_next_sample),w
   824  0069  1D03               	skipz
   825  006A  286C               	goto	u11_21
   826  006B  286D               	goto	u11_20
   827  006C                     u11_21:
   828  006C  287F               	goto	i1l1668
   829  006D                     u11_20:
   830                           	line	96
   831                           	
   832  006D                     i1l1658:	
   833                           ;Main.c: 95: {
   834                           ;Main.c: 96: ones_count++;
   835  006D  3001               	movlw	(01h)
   836  006E  00F5               	movwf	(??_isr+0)+0
   837  006F  0875               	movf	(??_isr+0)+0,w
   838  0070  07F3               	addwf	(_ones_count),f
   839                           	line	97
   840                           ;Main.c: 97: bit_count++;
   841  0071  3001               	movlw	(01h)
   842  0072  00F5               	movwf	(??_isr+0)+0
   843  0073  0875               	movf	(??_isr+0)+0,w
   844  0074  07F0               	addwf	(_bit_count),f
   845                           	line	98
   846                           	
   847  0075                     i1l1660:	
   848                           ;Main.c: 98: last8bits >>= 1;
   849  0075  1003               	clrc
   850  0076  0CF2               	rrf	(_last8bits),f
   851                           
   852                           	line	99
   853                           	
   854  0077                     i1l1662:	
   855                           ;Main.c: 99: last8bits |= 0x80;
   856  0077  17F2               	bsf	(_last8bits)+(7/8),(7)&7
   857                           	line	100
   858                           	
   859  0078                     i1l1664:	
   860                           ;Main.c: 100: sample_clock = 0;
   861  0078  01F4               	clrf	(_sample_clock)
   862                           	line	101
   863                           	
   864  0079                     i1l1666:	
   865                           ;Main.c: 101: next_sample = 8;
   866  0079  3008               	movlw	(08h)
   867  007A  00F5               	movwf	(??_isr+0)+0
   868  007B  0875               	movf	(??_isr+0)+0,w
   869  007C  00FB               	movwf	(_next_sample)
   870  007D  287F               	goto	i1l1668
   871                           	line	102
   872                           	
   873  007E                     i1l636:	
   874  007E  287F               	goto	i1l1668
   875                           	line	104
   876                           	
   877  007F                     i1l635:	
   878                           	line	106
   879                           	
   880  007F                     i1l1668:	
   881                           ;Main.c: 102: }
   882                           ;Main.c: 104: }
   883                           ;Main.c: 106: if (flag)
   884  007F  1CFA               	btfss	(_flag/8),(_flag)&7
   885  0080  2882               	goto	u12_21
   886  0081  2883               	goto	u12_20
   887  0082                     u12_21:
   888  0082  288B               	goto	i1l1676
   889  0083                     u12_20:
   890                           	line	108
   891                           	
   892  0083                     i1l1670:	
   893                           ;Main.c: 107: {
   894                           ;Main.c: 108: bit_count = 0;
   895  0083  01F0               	clrf	(_bit_count)
   896                           	line	109
   897                           ;Main.c: 109: flag = 0;
   898  0084  10FA               	bcf	(_flag/8),(_flag)&7
   899                           	line	110
   900                           	
   901  0085                     i1l1672:	
   902                           ;Main.c: 110: TXREG = 0x1B;
   903  0085  301B               	movlw	(01Bh)
   904  0086  0099               	movwf	(25)	;volatile
   905                           	line	111
   906                           ;Main.c: 111: TXREG = 0x7E;
   907  0087  307E               	movlw	(07Eh)
   908  0088  0099               	movwf	(25)	;volatile
   909                           	line	112
   910                           	
   911  0089                     i1l1674:	
   912                           ;Main.c: 112: RB0 = 1;
   913  0089  1406               	bsf	(48/8),(48)&7
   914                           	line	113
   915                           ;Main.c: 113: }
   916  008A  2895               	goto	i1l638
   917                           	line	114
   918                           	
   919  008B                     i1l637:	
   920                           	line	116
   921                           	
   922  008B                     i1l1676:	
   923                           ;Main.c: 114: else
   924                           ;Main.c: 115: {
   925                           ;Main.c: 116: if (bit_count == 8)
   926  008B  0870               	movf	(_bit_count),w
   927  008C  3A08               	xorlw	08h
   928  008D  1D03               	skipz
   929  008E  2890               	goto	u13_21
   930  008F  2891               	goto	u13_20
   931  0090                     u13_21:
   932  0090  2895               	goto	i1l638
   933  0091                     u13_20:
   934                           	line	118
   935                           	
   936  0091                     i1l1678:	
   937                           ;Main.c: 117: {
   938                           ;Main.c: 118: bit_count = 0;
   939  0091  01F0               	clrf	(_bit_count)
   940                           	line	119
   941                           	
   942  0092                     i1l1680:	
   943                           ;Main.c: 119: TXREG = last8bits;
   944  0092  0872               	movf	(_last8bits),w
   945  0093  0099               	movwf	(25)	;volatile
   946  0094  2895               	goto	i1l638
   947                           	line	121
   948                           	
   949  0095                     i1l639:	
   950                           	line	122
   951                           	
   952  0095                     i1l638:	
   953                           	line	123
   954                           ;Main.c: 121: }
   955                           ;Main.c: 122: }
   956                           ;Main.c: 123: if (ones_count == 7)
   957  0095  0873               	movf	(_ones_count),w
   958  0096  3A07               	xorlw	07h
   959  0097  1D03               	skipz
   960  0098  289A               	goto	u14_21
   961  0099  289B               	goto	u14_20
   962  009A                     u14_21:
   963  009A  289E               	goto	i1l631
   964  009B                     u14_20:
   965                           	line	125
   966                           	
   967  009B                     i1l1682:	
   968                           ;Main.c: 124: {
   969                           ;Main.c: 125: dcd = 0;
   970  009B  107A               	bcf	(_dcd/8),(_dcd)&7
   971                           	line	126
   972                           ;Main.c: 126: RB0 = 0;
   973  009C  1006               	bcf	(48/8),(48)&7
   974  009D  289E               	goto	i1l631
   975                           	line	127
   976                           	
   977  009E                     i1l640:	
   978                           	line	128
   979                           	
   980  009E                     i1l631:	
   981                           	line	130
   982                           ;Main.c: 127: }
   983                           ;Main.c: 128: }
   984                           ;Main.c: 130: TMR2IF = 0;
   985  009E  108C               	bcf	(97/8),(97)&7
   986  009F  28A0               	goto	i1l641
   987                           	line	131
   988                           	
   989  00A0                     i1l630:	
   990                           	line	132
   991                           	
   992  00A0                     i1l641:	
   993  00A0  0879               	movf	(??_isr+4),w
   994  00A1  00FF               	movwf	btemp+1
   995  00A2  0878               	movf	(??_isr+3),w
   996  00A3  008A               	movwf	pclath
   997  00A4  0877               	movf	(??_isr+2),w
   998  00A5  0084               	movwf	fsr0
   999  00A6  0E76               	swapf	(??_isr+1)^0FFFFFF80h,w
  1000  00A7  0083               	movwf	status
  1001  00A8  0EFE               	swapf	saved_w,f
  1002  00A9  0E7E               	swapf	saved_w,w
  1003  00AA  0009               	retfie
  1004                           	opt stack 0
  1005                           GLOBAL	__end_of_isr
  1006  00AB                     	__end_of_isr:
  1007 ;; =============== function _isr ends ============
  1008                           
  1009                           	signat	_isr,88
  1010                           psect	text79,local,class=CODE,delta=2
  1011                           global __ptext79
  1012  0000                     __ptext79:
  1013                           	global	btemp
  1014  007E                     	btemp set 07Eh
  1015                           
  1016                           	DABS	1,126,2	;btemp
  1017                           	global	wtemp0
  1018  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat May 26 18:57:16 2012

                    _RD 0C60                      _WR 0C61                     l621 00CF                     l644 00E1  
                   l645 00E1                     l646 00E2                     l647 00E2                     _GIE 005F  
                   _RB0 0030                     _RB4 0034                     _PR2 0092                     _dcd 03D0  
                   _isr 0013                     fsr0 0004                    l1618 00AB                    l2542 00DD  
                  ?_isr 0075                    _PIE1 008C                    _RBIF 0058                    _TMR0 0001  
                  _WREN 0C62                    u1_20 001B                    u1_21 001A                    u2_20 0021  
                  u2_21 0020                    u3_20 0026                    u3_21 0025                    u4_20 0030  
                  u4_21 002F                    u5_20 0035                    u5_21 0034                    u6_20 003F  
                  u6_21 003E                    u7_20 0043                    u7_21 0042                    u8_20 0047  
                  u8_21 0046                    u9_20 004D                    u9_21 004C                    _flag 03D1  
                  _main 00DD                    _last 03D2                    btemp 007E                    start 0011  
         _Init_Hardware 00AB                   ??_isr 0075                   ?_main 0075                   _EEADR 010D  
                 _CARRY 0018                   _CMCON 009C                   _ANSEL 009B                   _T1CON 0010  
                 _T2CON 0012                   i1l630 00A0                   i1l631 009E                   i1l640 009E  
                 i1l632 0063                   i1l624 003B                   i1l633 0054                   i1l641 00A0  
                 i1l625 002A                   i1l634 005B                   i1l626 0028                   i1l635 007F  
                 i1l627 0039                   i1l636 007E                   i1l628 0039                   i1l637 008B  
                 i1l629 0037                   i1l638 0095                   i1l639 0095                   u10_20 005A  
                 u10_21 0059                   u11_20 006D                   u11_21 006C                   _RCSTA 0018  
                 u12_20 0083                   u12_21 0082                   u13_20 0091                   u13_21 0090  
                 u14_20 009B                   u14_21 009A                   _SPBRG 0099                   _TRISA 0085  
                 _TRISB 0086                   _TXREG 0019                   _TXSTA 0098                   _count 0071  
        __pbitbssCOMMON 03D0                   pclath 000A                   status 0003                   wtemp0 007E  
        ?_Init_Hardware 0075            __end_of_main 00E4                  ??_main 007A                  _EEDATA 010C  
                _EECON1 018C                  _EECON2 018D                  i1l1620 0013                  i1l1630 0026  
                i1l1622 0017                  i1l1640 003F                  i1l1632 002A                  i1l1624 001B  
                i1l1650 0054                  i1l1642 0043                  i1l1634 0030                  i1l1626 0021  
                i1l1660 0075                  i1l1652 005A                  i1l1644 0047                  i1l1636 0031  
                i1l1628 0022                  i1l1670 0083                  i1l1662 0077                  i1l1654 005E  
                i1l1646 004D                  i1l1638 0035                  i1l1680 0092                  i1l1672 0085  
                i1l1664 0078                  i1l1648 0051                  i1l1656 0063                  i1l1682 009B  
                i1l1674 0089                  i1l1666 0079                  i1l1658 006D                  i1l1676 008B  
                i1l1668 007F                  i1l1678 0091                  _INTCON 000B                  _TMR2IF 0061  
          __pdataCOMMON 007B                  saved_w 007E         ??_Init_Hardware 007A          __pcstackCOMMON 0075  
            __pmaintext 00DD              __pintentry 0004            __size_of_isr 0098    end_of_initialization 00DA  
            _ones_count 0073           __pidataCOMMON 00E4     start_initialization 00D0             __end_of_isr 00AB  
 __end_of_Init_Hardware 00D0             __pbssCOMMON 0070               _bit_count 0070               _last8bits 0072  
     interrupt_function 0004               _rxtoggled 03D3            _sample_clock 0074                __ptext77 00AB  
              __ptext78 0013                __ptext79 0000           __size_of_main 0007             _next_sample 007B  
              intlevel1 0000              _OPTION_REG 0081  __size_of_Init_Hardware 0025  
